<div class="products-grid">
    <% produtos.forEach(produto=> {
        const expirationDate = produto.closestExpiration ? new Date(produto.closestExpiration) : null;
        const daysDiff = expirationDate ? Math.ceil((expirationDate - new Date()) / (1000 * 3600 * 24)) : null;
        let vencimentoFormatado = expirationDate ? expirationDate.toISOString().split('T')[0] : null;
        let today = new Date().toISOString().split('T')[0];

        %>
        <div class="product-card">
            <div class="product-details">
                <h3 class="product-name" style="margin-top:1rem;">
                    <%= produto.nome %>
                </h3>
                <div class="product-actions" style="padding:8;">
                    <button class="btn-confirm" data-id="<%= produto.id %>"
                        data-date="<%= produto.closestExpiration %>">
                        <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18">
                            <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" />
                        </svg>
                        Feito
                    </button>
                </div>
                <div class="product-meta">
                    <span class="badge <%= getExpirationStatus(expirationDate) %>">
                        <% if (expirationDate) { %>
                            <%= expirationDate.toLocaleDateString('pt-BR', { timeZone: 'UTC' }) %>

                                <% if (vencimentoFormatado===today) { %>
                                    <span class="urgent-label">(Vence hoje)</span>
                                    <% } else if (daysDiff < 3 && daysDiff>= 0) { %>
                                        <span class="urgent-label">(Vence em <%= daysDiff %> dias)</span>
                                        <% } %>
                                            <% } else { %>
                                                Sem data de vencimento
                                                <% } %>
                    </span>
                </div>
            </div>
        </div>
        <% }) %>
</div>

<% function getExpirationStatus(date) { if (!date) return 'neutral' ; const now=new Date(); const
    timeDiff=date.getTime() - now.getTime(); const daysDiff=Math.ceil(timeDiff / (1000 * 3600 * 24)); if (daysDiff < 0)
    return 'expired' ; if (daysDiff <=3) return 'urgent' ; // Alterado para 3 dias if (daysDiff <=30) return 'warning' ;
    return 'ok' ; } %>



    <script>

        function updateUI(updatedProduct) {
            console.log(updatedProduct)
            const productCard = document.querySelector(`[data-id="${updatedProduct.id}"]`);

            // Atualize os elementos DOM aqui
            const badge = productCard.querySelector('.badge');
            const newDate = new Date(updatedProduct.closestExpiration);

            badge.className = `badge ${getExpirationStatus(newDate)}`;
            badge.innerHTML = newDate.toLocaleDateString('pt-BR', { timeZone: 'UTC' });
        }
        async function doneProduto(id, date) {
            try {
                const response = await fetch('/api/produtos/done', {
                    method: "PATCH",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id: id,
                        date: date
                    })
                });

                if (!response.ok) throw new Error('Falha na requisição');

                const result = await response.json();
                location.reload()
            } catch (error) {
                console.error('Erro:', error);
                alert(error.message);
            }
        }



        document.querySelectorAll('.btn-confirm').forEach(button => {
            button.addEventListener('click', async (event) => {
                const id = event.currentTarget.dataset.id;
                const date = new Date(event.currentTarget.dataset.date);
                doneProduto(id, date);
            });
        });
    </script>

    <!-- 
        // Função JavaScript para substituir a versão EJS
        function getExpirationStatus(date) {
            if (!date) return 'neutral';
            const now = new Date();
            const timeDiff = date.getTime() - now.getTime();
            const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));

            if (daysDiff < 0) return 'expired';
            if (daysDiff <= 3) return 'urgent';
            if (daysDiff <= 30) return 'warning';
            return 'ok';
        }

        document.querySelectorAll('.btn-confirm').forEach(button => {
            button.addEventListener('click', async (e) => {

                badge.className = `badge ${getExpirationStatus(newExpirationDate)}`; // Usa a função JS
            });
        });
 -->